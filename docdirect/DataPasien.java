/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package docdirect;

import java.sql.ResultSet;
import java.sql.*;
import java.lang.String;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hafidz
 */
public class DataPasien extends javax.swing.JFrame {
    public Statement st;
    public ResultSet rs;
    Connection pasien; 
    
    public DataPasien() {
        initComponents();
        pasien = (Connection) docdirect.KoneksiPasien.koneksiDB();
        TampilData();
    }

    private void bersih(){
        nomor.setText("");
        NamaPasien1.setText("");
        Gender.setText("");
        Notelp.setText("");
        Keluhan1.setText("");
        bayar.setText("");
        TanggalLahir1.setText("");
        TanggalKonsul1.setText("");
        Simpan.setText("Simpan");
        nomor.setEditable(true);
        
}
    private void CariData(String sql){
     try{
        st = pasien.createStatement();
        rs = (ResultSet) st.executeQuery("SELECT * FROM datapasien WHERE"+
                cmbCari.getSelectedItem().toString()+" LIKE CONCAT('%', ?, '%')"+CariPasien.getText()+ "%'");
        PreparedStatement pst = pasien.prepareStatement(sql);
        pst.setString(1, CariPasien.getText());
        rs = pst.executeQuery();
        DisplayData(rs);
    } catch (Exception e)
    {JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    private void TampilData() {
    try {
            st = pasien.createStatement();
            rs = (ResultSet) st.executeQuery("SELECT * FROM datapasien");
            DisplayData(rs);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TanggalKonsul1 = new javax.swing.JTextField();
        batal = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Simpan = new javax.swing.JButton();
        TanggalLahir1 = new javax.swing.JTextField();
        bayar = new javax.swing.JTextField();
        Gender = new javax.swing.JTextField();
        CariPasien = new javax.swing.JTextField();
        NamaPasien1 = new javax.swing.JTextField();
        Notelp = new javax.swing.JTextField();
        TombolBackToLogin = new javax.swing.JButton();
        nomor = new javax.swing.JTextField();
        cmbCari = new javax.swing.JComboBox<>();
        Keluhan1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TanggalKonsul1.setBackground(new java.awt.Color(63, 111, 253));
        TanggalKonsul1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        TanggalKonsul1.setForeground(new java.awt.Color(255, 255, 255));
        TanggalKonsul1.setText("Tanggal Konsultasi");
        TanggalKonsul1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TanggalKonsul1ActionPerformed(evt);
            }
        });
        getContentPane().add(TanggalKonsul1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, 250, 30));

        batal.setBackground(new java.awt.Color(63, 111, 253));
        batal.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        batal.setForeground(new java.awt.Color(255, 255, 255));
        batal.setText("Batal");
        batal.setBorder(null);
        batal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });
        getContentPane().add(batal, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 110, 120, 30));

        hapus.setBackground(new java.awt.Color(63, 111, 253));
        hapus.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        hapus.setForeground(new java.awt.Color(255, 255, 255));
        hapus.setText("Hapus");
        hapus.setBorder(null);
        hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 110, 120, 30));

        Edit.setBackground(new java.awt.Color(63, 111, 253));
        Edit.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Edit.setForeground(new java.awt.Color(255, 255, 255));
        Edit.setText("Simpan");
        Edit.setBorder(null);
        Edit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        getContentPane().add(Edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 130, 120, 30));

        Simpan.setBackground(new java.awt.Color(63, 111, 253));
        Simpan.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Simpan.setForeground(new java.awt.Color(255, 255, 255));
        Simpan.setText("Simpan");
        Simpan.setBorder(null);
        Simpan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanActionPerformed(evt);
            }
        });
        getContentPane().add(Simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, 120, 30));

        TanggalLahir1.setBackground(new java.awt.Color(63, 111, 253));
        TanggalLahir1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        TanggalLahir1.setForeground(new java.awt.Color(255, 255, 255));
        TanggalLahir1.setText("Tempat/Tanggal Lahir");
        TanggalLahir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TanggalLahir1ActionPerformed(evt);
            }
        });
        getContentPane().add(TanggalLahir1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 90, 250, 30));

        bayar.setBackground(new java.awt.Color(63, 111, 253));
        bayar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        bayar.setForeground(new java.awt.Color(255, 255, 255));
        bayar.setText("Pembayaran");
        bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bayarActionPerformed(evt);
            }
        });
        getContentPane().add(bayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 190, 30));

        Gender.setBackground(new java.awt.Color(63, 111, 253));
        Gender.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Gender.setForeground(new java.awt.Color(255, 255, 255));
        Gender.setText("Gender");
        Gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenderActionPerformed(evt);
            }
        });
        getContentPane().add(Gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 190, 30));

        CariPasien.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        CariPasien.setForeground(new java.awt.Color(63, 111, 253));
        CariPasien.setText("Cari Pasien");
        CariPasien.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CariPasienKeyPressed(evt);
            }
        });
        getContentPane().add(CariPasien, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 330, 30));

        NamaPasien1.setBackground(new java.awt.Color(63, 111, 253));
        NamaPasien1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        NamaPasien1.setForeground(new java.awt.Color(255, 255, 255));
        NamaPasien1.setText("Nama");
        NamaPasien1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NamaPasien1ActionPerformed(evt);
            }
        });
        getContentPane().add(NamaPasien1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 190, 30));

        Notelp.setBackground(new java.awt.Color(63, 111, 253));
        Notelp.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Notelp.setForeground(new java.awt.Color(255, 255, 255));
        Notelp.setText("No. Telepon");
        Notelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotelpActionPerformed(evt);
            }
        });
        getContentPane().add(Notelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 190, 30));

        TombolBackToLogin.setBackground(new java.awt.Color(63, 111, 253));
        TombolBackToLogin.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        TombolBackToLogin.setForeground(new java.awt.Color(255, 255, 255));
        TombolBackToLogin.setText("Back");
        TombolBackToLogin.setBorder(null);
        TombolBackToLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TombolBackToLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolBackToLoginActionPerformed(evt);
            }
        });
        getContentPane().add(TombolBackToLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 80, 30));

        nomor.setBackground(new java.awt.Color(63, 111, 253));
        nomor.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        nomor.setForeground(new java.awt.Color(255, 255, 255));
        nomor.setText("Nomor");
        nomor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomorActionPerformed(evt);
            }
        });
        getContentPane().add(nomor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 190, 30));

        cmbCari.setBackground(new java.awt.Color(65, 111, 253));
        cmbCari.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        cmbCari.setForeground(new java.awt.Color(255, 255, 255));
        cmbCari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nomor", "Nama" }));
        getContentPane().add(cmbCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, 140, 30));

        Keluhan1.setBackground(new java.awt.Color(63, 111, 253));
        Keluhan1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Keluhan1.setForeground(new java.awt.Color(255, 255, 255));
        Keluhan1.setText("Keluhan");
        Keluhan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Keluhan1ActionPerformed(evt);
            }
        });
        getContentPane().add(Keluhan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 190, 30));

        Tabel.setBackground(new java.awt.Color(65, 111, 253));
        Tabel.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Tabel.setForeground(new java.awt.Color(255, 255, 255));
        Tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nomor", "Nama Pasien", "Gender", "Keluhan", "No. Telepon", "Pembayaran", "Tempat/Tanggal Lahir", "Tanggal Konsultasi"
            }
        ));
        Tabel.setGridColor(new java.awt.Color(255, 255, 255));
        Tabel.setSelectionBackground(new java.awt.Color(255, 255, 255));
        Tabel.setSelectionForeground(new java.awt.Color(255, 255, 255));
        Tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabel);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 1040, 350));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/docdirect/DOC DIRECT (11) (1).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TombolBackToLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolBackToLoginActionPerformed
        // TODO add your handling code here:
        TampilanDokter tampilan = new TampilanDokter();
        tampilan.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_TombolBackToLoginActionPerformed

    private void SimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanActionPerformed
        // TODO add your handling code here:
        
            try {
                st = pasien.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(nomor.getText().equals("")||
                NamaPasien1.getText().equals("")||
                Gender.getText().equals("")||
                Keluhan1.getText().equals("") ||
                Notelp.getText().equals("")||
                bayar.getText().equals("")||
                TanggalLahir1.getText().equals("")||
                TanggalKonsul1.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Data Tidak Boleh Kosong", "Validasi Data", JOptionPane.INFORMATION_MESSAGE);
            return;
            }
        if ("Simpan".equals(Simpan.getText())) {
            try {
                String cek = "SELECT * FROM datapasien WHERE Nomor = '" + nomor.getText() + "'";
                ResultSet rs = st.executeQuery(cek);
        
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Nomor sudah ada");
        } else {
            String sql = "INSERT INTO datapasien VALUES ('" + nomor.getText()+
                    "','" + NamaPasien1.getText()+
                    "','" + Gender.getText()+
                    "','" + Keluhan1.getText()+
                    "','" + Notelp.getText()+
                    "','" + bayar.getText()+
                    "','" + TanggalLahir1.getText()+
                    "','" + TanggalKonsul1.getText()+ "')"; 
            st.executeLargeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
            bersih();
            TampilData();
        }
            } catch (SQLException e) {
                Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, e);
            
            }
        }

    }//GEN-LAST:event_SimpanActionPerformed

    private void NamaPasien1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NamaPasien1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NamaPasien1ActionPerformed

    private void TanggalLahir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TanggalLahir1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TanggalLahir1ActionPerformed

    private void TanggalKonsul1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TanggalKonsul1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TanggalKonsul1ActionPerformed

    private void Keluhan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Keluhan1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Keluhan1ActionPerformed

    private void bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bayarActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        if (nomor.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Data Yang Akan Dihapus");
        }else{
            int jawab =  JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Untuk Menghapus Data Ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (jawab == JOptionPane.YES_OPTION) { 
                try{
                st = pasien.createStatement();
                String sql = "DELETE FROM datapasien WHERE Nomor = '" + nomor.getText() + "'";
                st.executeUpdate(sql);
                 JOptionPane.showMessageDialog(null, "Data Berhasil DIhapus");
                 TampilData();
                 bersih();
                 
            } catch (SQLException e) {
                Logger.getLogger(DataPasien.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }//GEN-LAST:event_hapusActionPerformed
    }
    private void NotelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NotelpActionPerformed

    private void GenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenderActionPerformed

    private void nomorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomorActionPerformed

    private void TabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelMouseClicked
        // TODO add your handling code here:
        int selectedRow = Tabel.getSelectedRow();
    if (selectedRow != -1) { // Ensure a row is selected
        nomor.setText(Tabel.getValueAt(selectedRow, 0).toString());
        NamaPasien1.setText(Tabel.getValueAt(selectedRow, 1).toString());
        Gender.setText(Tabel.getValueAt(selectedRow, 2).toString());
        Notelp.setText(Tabel.getValueAt(selectedRow, 3).toString());
        Keluhan1.setText(Tabel.getValueAt(selectedRow, 4).toString());
        bayar.setText(Tabel.getValueAt(selectedRow, 5).toString());
        TanggalLahir1.setText(Tabel.getValueAt(selectedRow, 6).toString());
        TanggalKonsul1.setText(Tabel.getValueAt(selectedRow, 7).toString());
        
        nomor.setEditable(false);
        
    }
    
    }//GEN-LAST:event_TabelMouseClicked

    private void CariPasienKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CariPasienKeyPressed
        // TODO add your handling code here:
        CariData();
        bersih();
    }//GEN-LAST:event_CariPasienKeyPressed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_batalActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:                                     
     try {
        String sql = "UPDATE datapasien SET Nama Pasien = ?, Gender = ?, Keluhan = ?, Nomor Telepon = ?, Pembayaran = ?, Tempat/Tanggal Lahir = ?, Tanggal Konsultasi = ? WHERE Nomor = ?";
        
        PreparedStatement pst = pasien.prepareStatement(sql);
        
        pst.setString(1, NamaPasien1.getText());
        pst.setString(2, Gender.getText());
        pst.setString(3, Keluhan1.getText());
        pst.setString(4, Notelp.getText());
        pst.setString(5, bayar.getText());
        pst.setString(6, TanggalLahir1.getText());
        pst.setString(7, TanggalKonsul1.getText());
        pst.setString(8, nomor.getText()); // Make sure nomor.getText() returns the correct value
        
        int updateCount = pst.executeUpdate();
        
        if (updateCount > 0) {
            JOptionPane.showMessageDialog(null, "Data berhasil diupdate");
            bersih();
            TampilData();
        } else {
            JOptionPane.showMessageDialog(null, "Gagal mengupdate data", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_EditActionPerformed

    

  
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataPasien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataPasien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CariPasien;
    private javax.swing.JButton Edit;
    private javax.swing.JTextField Gender;
    private javax.swing.JTextField Keluhan1;
    private javax.swing.JTextField NamaPasien1;
    private javax.swing.JTextField Notelp;
    private javax.swing.JButton Simpan;
    private javax.swing.JTable Tabel;
    private javax.swing.JTextField TanggalKonsul1;
    private javax.swing.JTextField TanggalLahir1;
    private javax.swing.JButton TombolBackToLogin;
    private javax.swing.JButton batal;
    private javax.swing.JTextField bayar;
    private javax.swing.JComboBox<String> cmbCari;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomor;
    // End of variables declaration//GEN-END:variables

    private void DisplayData(ResultSet rs) {
        try {
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Nomor");
            model.addColumn("Nama Pasien");
            model.addColumn("Gender");
            model.addColumn("Keluhan");
            model.addColumn("Nomor Telepon");
            model.addColumn("Pembayaran");
            model.addColumn("Tempat/Tanggal Lahir");
            model.addColumn("Tanggal Konsultasi");
            
            model.getDataVector().removeAllElements();
            model.fireTableDataChanged();
            model.setRowCount(0);
            
            while (rs.next()){
                Object[] data = {
                    rs.getString("Nomor"),
                    rs.getString("Nama Pasien"),
                    rs.getString("Gender"),
                    rs.getString("Nomor Telepon"),
                    rs.getString("Keluhan"),
                    rs.getString("Pembayaran"),
                    rs.getString("Tempat/Tanggal Lahir"),
                    rs.getString("Tanggal Konsultasi")
                };
                model.addRow(data);
            }
            Tabel.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void CariData() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}

